/*
 * OptHub REST API
 * OptHub Public REST API.
 *
 * The version of the OpenAPI document: 0.3.0
 * Contact: dev@opthub.ai
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AuthErrorResponse;
import org.openapitools.client.model.CreateMatchTrial400Response;
import org.openapitools.client.model.CreateMatchTrial403Response;
import org.openapitools.client.model.CreateMatchTrial404Response;
import org.openapitools.client.model.CreateMatchTrialRequest;
import org.openapitools.client.model.GetMatchEvaluation404Response;
import org.openapitools.client.model.GetMatchScore404Response;
import org.openapitools.client.model.GetMatchTrial403Response;
import org.openapitools.client.model.GetMatchTrial404Response;
import org.openapitools.client.model.GetSolution404Response;
import org.openapitools.client.model.MatchTrialEvaluation;
import org.openapitools.client.model.MatchTrialResponse;
import org.openapitools.client.model.MatchTrialScore;
import org.openapitools.client.model.ServerErrorResponse;
import org.openapitools.client.model.Solution;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for MatchTrialsApi
 */
@Disabled
public class MatchTrialsApiTest {

    private final MatchTrialsApi api = new MatchTrialsApi();

    /**
     * Create a match trial
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createMatchTrialTest() throws ApiException {
        UUID matchUuid = null;
        CreateMatchTrialRequest createMatchTrialRequest = null;
        MatchTrialResponse response = api.createMatchTrial(matchUuid, createMatchTrialRequest);
        // TODO: test validations
    }

    /**
     * Retrieve status of a specific match evaluation related to the Solution submitted by the Participant themselves.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMatchEvaluationTest() throws ApiException {
        UUID matchUuid = null;
        Integer trialNo = null;
        MatchTrialEvaluation response = api.getMatchEvaluation(matchUuid, trialNo);
        // TODO: test validations
    }

    /**
     * Retrieve status of a specific match score related to the Solution submitted by the Participant themselves.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMatchScoreTest() throws ApiException {
        UUID matchUuid = null;
        Integer trialNo = null;
        MatchTrialScore response = api.getMatchScore(matchUuid, trialNo);
        // TODO: test validations
    }

    /**
     * Retrieve status of a specific Match Trial related to the Solution submitted by the Participant themselves.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMatchTrialTest() throws ApiException {
        UUID matchUuid = null;
        Integer trialNo = null;
        MatchTrialResponse response = api.getMatchTrial(matchUuid, trialNo);
        // TODO: test validations
    }

    /**
     * Retrieve the Solution submitted by the Participant themselves.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSolutionTest() throws ApiException {
        UUID matchUuid = null;
        Integer trialNo = null;
        Solution response = api.getSolution(matchUuid, trialNo);
        // TODO: test validations
    }

}
